version: "3.8"
services: 
  WebApp: 
    image: webapp
    build: ./webapp
    ports:
      - "80:8080"
    volumes: 
      - msgVol:/usr/src/messages
    restart: always
    depends_on:
      - db
    command: sh -c "dockerize -wait tcp://db:3306 -timeout 300s -wait-retry-interval 5s node server.js"
  db:
    image: msgdb
    build: ./db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    # command: --init-file ./db/db_files/db_schema.sql
    # expose:
    #   - '3306'

volumes:
  msgVol:



#docker-compose up -d --force -recreate 

  
#docker logs idcontainer
#docker rm -f $(docker ps -aq) //remove all containers even if they are running
#docker stop $(docker ps -aq) //stop all running containers


 # https://stackoverflow.com/questions/44284484/docker-compose-share-named-volume-between-multiple-containers
 # https://medium.com/better-programming/setting-up-mysql-database-in-a-docker-d6c69a3e9afe


#docker run --name msgDB -e MYSQL_ROOT_PASSWORD=mysecretpw -d mysql:latest
# ... where some-mysql is the name you want to assign to your container, my-secret-pw 
# is the password to be set for the MySQL root user and tag is the tag specifying the MySQL 
# version you want. See the list above for relevant tags.
